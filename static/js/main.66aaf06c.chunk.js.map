{"version":3,"sources":["logo.svg","components/Erroring.js","App.js","reportWebVitals.js","index.js"],"names":["Erroring","props","state","showBrokenThing","this","doStuff","setState","className","src","logo","alt","href","target","rel","onClick","someThingBad","Component","App","error","Error","info","Sentry","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAAe,MAA0B,iC,eC+D1BA,E,kDA1Db,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,iBAAiB,GAHF,E,6DAOnB,WACEC,KAAKC,Y,6BAGP,WACED,KAAKE,SAAS,CAAEH,iBAAiB,M,oBAGnC,WACE,OAAIC,KAAKF,MAAMC,gBAEX,sBAAKI,UAAU,MAAf,UACI,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,yBAQF,sCACA,wBAAQC,QAASV,KAAKW,eAAtB,wBAMJ,sBAAKR,UAAU,MAAf,UACI,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,yBAQF,sCACA,wBAAQC,QAASV,KAAKD,gBAAtB,gC,GArDea,aCmCRC,E,kDA/Bb,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXgB,OAAO,GAHQ,E,8CAOnB,WACE,MAAM,IAAIC,MAAM,sB,+BAGlB,SAAkBD,EAAOE,GACvBC,IAAwBH,GACxBd,KAAKE,SAAS,CAAEY,OAAO,M,oBAGzB,WACE,OAAId,KAAKF,MAAMgB,MAEX,qBAAKX,UAAU,MAAf,SACE,2DAMJ,cAAC,EAAD,Q,GA3BYS,aCKHM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCEdF,IAAY,CACVU,IAAK,6EACLC,aAAc,CAAC,IAAIC,IAAaC,gBAKhCC,iBAAkB,IAGpBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BlB,M","file":"static/js/main.66aaf06c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Component } from 'react';\nimport logo from '../logo.svg';\nimport '../App.css';\n\nclass Erroring extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showBrokenThing: false,\n    };\n  }\n\n  someBadMisspelledFunction() {\n    this.doStuff();\n  }\n\n  showBrokenThing() {\n    this.setState({ showBrokenThing: true });\n  }\n\n  render() {\n    if (this.state.showBrokenThing) {\n      return (\n        <div className=\"App\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <p>\n              Edit <code>src/App.js</code> and save to reload.\n            </p>\n            <a\n              className=\"App-link\"\n              href=\"https://reactjs.org\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Learn React\n            </a>\n          <p>Hello</p>\n          <button onClick={this.someThingBad()}>BROKEN!</button>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        <p>Hello</p>\n        <button onClick={this.showBrokenThing}>Throw error</button>\n      </div>\n    );\n  }\n}\n\nexport default Erroring;\n","import { Component } from 'react';\nimport * as Sentry from \"@sentry/react\";\n\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Erroring from './components/Erroring';\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: false,\n    };\n  }\n\n  throwError() {\n    throw new Error('This is an error');\n  }\n\n  componentDidCatch(error, info) {\n    Sentry.captureException(error);\n    this.setState({ error: true });\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <div className=\"App\">\n          <h1>AH CRAP, THE APP BROKE!</h1>\n        </div>\n      );\n    }\n\n    return (\n      <Erroring />\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\n\nSentry.init({\n  dsn: \"https://4bc62bfb97464934ba039c204c1eabf8@o1083407.ingest.sentry.io/6093071\",\n  integrations: [new Integrations.BrowserTracing()],\n\n  // Set tracesSampleRate to 1.0 to capture 100%\n  // of transactions for performance monitoring.\n  // We recommend adjusting this value in production\n  tracesSampleRate: 1.0,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}